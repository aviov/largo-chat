name: Deploy Infrastructure and Milvus

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ${{ secrets.AWS_REGION || 'eu-central-1' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'cdk/package-lock.json'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install dependencies
        run: |
          cd cdk
          npm ci

      - name: Create and update API secrets
        run: |
          # Check and update OpenAI API key
          if ! aws secretsmanager describe-secret --secret-id largo-chat/openai-api-key >/dev/null 2>&1; then
            aws secretsmanager create-secret --name largo-chat/openai-api-key --secret-string "${{ secrets.OPENAI_API_KEY }}"
          else
            aws secretsmanager update-secret --secret-id largo-chat/openai-api-key --secret-string "${{ secrets.OPENAI_API_KEY }}"
          fi
          
          # Check and update Google API key
          if ! aws secretsmanager describe-secret --secret-id largo-chat/google-api-key >/dev/null 2>&1; then
            aws secretsmanager create-secret --name largo-chat/google-api-key --secret-string "${{ secrets.GOOGLE_API_KEY }}"
          else
            aws secretsmanager update-secret --secret-id largo-chat/google-api-key --secret-string "${{ secrets.GOOGLE_API_KEY }}"
          fi

      - name: Deploy CDK stack
        run: |
          cd cdk
          npm run build
          npm run cdk deploy -- --require-approval never

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Deploy Milvus to EKS
        run: |
          ./scripts/deploy-milvus-to-eks.sh
